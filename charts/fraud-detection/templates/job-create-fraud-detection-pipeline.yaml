# ------------------------------------------------------------
# 1)  ServiceAccount
# ------------------------------------------------------------
apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline-bootstrap
  namespace: fraud-detection
---
# ------------------------------------------------------------
# 2)  Least-privilege Role for port-forwarding
# ------------------------------------------------------------
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: port-forwarder
  namespace: fraud-detection
rules:
  # allow oc to discover a backing pod for the Service
  - apiGroups: [""]
    resources: ["services", "endpoints"]
    verbs: ["get", "list", "watch"]
  # allow oc port-forward pod/…
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list", "watch"]
  - apiGroups: [""]
    resources: ["pods/portforward"]
    verbs: ["create"]
---
# ------------------------------------------------------------
# 3)  Bind SA → Role
# ------------------------------------------------------------
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pipeline-bootstrap-portforward
  namespace: fraud-detection
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: port-forwarder
subjects:
  - kind: ServiceAccount
    name: pipeline-bootstrap
    namespace: fraud-detection
---
# ------------------------------------------------------------
# 4)  Job that uses oc port-forward + curl
# ------------------------------------------------------------
apiVersion: batch/v1
kind: Job
metadata:
  name: create-fraud-detection-pipeline
  namespace: fraud-detection
spec:
  backoffLimit: 0
  ttlSecondsAfterFinished: null          # keep pod for log review
  template:
    metadata:
      name: create-fraud-detection-pipeline
    spec:
      serviceAccountName: pipeline-bootstrap
      restartPolicy: Never
      containers:
        - name: bootstrap
          image: image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -ec
            - |
              set -o pipefail

              # ------------------------------------------------------------------
              # 0) Start port-forward in background
              # ------------------------------------------------------------------
              echo "Starting port-forward svc/ds-pipeline-dspa 8443→8888 …"
              oc -n fraud-detection port-forward svc/ds-pipeline-dspa 8443:8888 --address 127.0.0.1 &
              PF_PID=$!
              trap "kill ${PF_PID}" EXIT

              # ------------------------------------------------------------------
              # 1) Wait for the local tunnel to be ready
              # ------------------------------------------------------------------
              API="https://127.0.0.1:8443"
              HEALTH="${API}/apis/v2beta1/healthz"
              CREATE="${API}/apis/v2beta1/pipelines/create"

              echo "Waiting for ${HEALTH} …"
              for i in {1..30}; do
                if curl -ksf "${HEALTH}" >/dev/null ; then
                  echo "✓ Pipeline API is ready via port-forward."
                  break
                fi
                sleep 5
              done

              # ------------------------------------------------------------------
              # 2) Create the pipeline
              # ------------------------------------------------------------------
              echo "Posting pipeline definition to ${CREATE}"
              curl -ks \
                   -H 'Content-Type: application/json' \
                   -X POST --data @- \
                   "${CREATE}" <<'JSON'
              {
                "pipeline": {
                  "display_name": "fraud-detection",
                  "description": ""
                },
                "pipeline_version": {
                  "display_name": "fraud-detection",
                  "description": "",
                  "package_url": {
                    "pipeline_url": "https://raw.githubusercontent.com/rh-aiservices-bu/fraud-detection/main/7_get_data_train_upload.yaml"
                  }
                }
              }
              JSON
              echo "✅ Pipeline created."
