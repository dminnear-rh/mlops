apiVersion: v1
kind: ServiceAccount
metadata:
  name: pipeline-bootstrap
  namespace: fraud-detection
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: pipeline-bootstrap-edit
  namespace: fraud-detection
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: edit
subjects:
  - kind: ServiceAccount
    name: pipeline-bootstrap
    namespace: fraud-detection
---
apiVersion: batch/v1
kind: Job
metadata:
  name: create-fraud-detection-pipeline
  namespace: fraud-detection
spec:
  backoffLimit: 0                 # don’t retry; keep pod for inspection
  ttlSecondsAfterFinished: null   # keep completed/failed pod forever
  template:
    metadata:
      name: create-fraud-detection-pipeline
    spec:
      serviceAccountName: pipeline-bootstrap
      restartPolicy: Never
      containers:
        - name: curl
          image: image-registry.openshift-image-registry.svc:5000/openshift/tools:latest
          imagePullPolicy: IfNotPresent
          command:
            - /bin/bash
            - -ec
            - |
              echo "Retrieving SA token…"
              BEARER_TOKEN=$(oc whoami --show-token)

              API="https://ds-pipeline-dspa.fraud-detection.svc.cluster.local:8888"
              ENDPOINT="$API/apis/v2beta1/pipelines/create"

              echo "Posting pipeline definition to ${ENDPOINT}"
              curl -k -X POST \
                   -H "Authorization: Bearer ${BEARER_TOKEN}" \
                   -H "Content-Type: application/json" \
                   --data @- \
                   "${ENDPOINT}" <<'JSON'
              {
                "pipeline": {
                  "display_name": "fraud-detection",
                  "description": ""
                },
                "pipeline_version": {
                  "display_name": "fraud-detection",
                  "description": "",
                  "package_url": {
                    "pipeline_url": "https://raw.githubusercontent.com/rh-aiservices-bu/fraud-detection/main/7_get_data_train_upload.yaml"
                  }
                }
              }
JSON
              echo "Done."
